services:
  sonarqube-db:
    image: postgres:15
    container_name: sonarqube-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${SONAR_DB_USER}
      POSTGRES_PASSWORD: ${SONAR_DB_PASSWORD}
      POSTGRES_DB: ${SONAR_DB_NAME}
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - dev-platform
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h sonarqube-db -U ${SONAR_DB_USER} -d ${SONAR_DB_NAME}"]
      interval: 10s
      retries: 10
      timeout: 5s

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      sonarqube-db:
        condition: service_healthy
    ports:
      - "${SONARQUBE_PORT}:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/${SONAR_DB_NAME}
      SONAR_JDBC_USERNAME: ${SONAR_DB_USER}
      SONAR_JDBC_PASSWORD: ${SONAR_DB_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - dev-platform
    restart: unless-stopped

volumes:
  sonarqube_data:
  sonarqube_extensions:
  postgresql_data:

networks:
  dev-platform:
    driver: bridge
