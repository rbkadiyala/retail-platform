version: '3.9'

services:
  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5432:5432"
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - retail-platform
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 10s
      retries: 10
      timeout: 5s

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_DATABASE: keycloak
      KC_HEALTH_ENABLED: "true"
    command: start-dev
    ports:
      - "8080:8080"
    networks:
      - retail-platform
    depends_on:
      keycloak-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://keycloak:8080/realms/master || exit 1"]
      interval: 10s
      retries: 10
      timeout: 10s

  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
    ports:
      - "5434:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - retail-platform
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db"]
      interval: 10s
      retries: 10
      timeout: 5s

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "9082:9082"
    depends_on:
      keycloak:
        condition: service_healthy
      auth-db:
        condition: service_healthy
    environment:
      KEYCLOAK_URL: http://keycloak:8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/auth_db
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: auth_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      LOG_PATH: /app/logs
    restart: unless-stopped
    volumes:
      - maven-repo:/root/.m2
      - ./auth-logs:/app/logs
    networks:
      - retail-platform

volumes:
  keycloak-db-data:
  auth-db-data:
  maven-repo:

networks:
  retail-platform:
    driver: bridge
